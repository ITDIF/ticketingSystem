<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jie.mapper.TicketMapper">

    <select id="queryTicketList" resultType="Ticket">
        select * from ticket;
    </select>
    <select id="queryTicketListPaging" resultType="Ticket">
        <foreach item="tableName" collection="tableNames" separator="UNION ALL">
            SELECT * FROM ${tableName}
            <if test="key != ''">
                where ${key} like CONCAT('%',#{value},'%')
            </if>
        </foreach>
        ORDER BY ticket_issuance_time DESC
        LIMIT ${start},${count}
    </select>
    <select id="queryTicketCount" resultType="int">
        SELECT SUM(count) AS total_count FROM (
        <foreach item="tableName" collection="tableNames" separator="UNION ALL">
            SELECT count(*) as count FROM ${tableName}
            <if test="key != ''">
                where ${key} like CONCAT('%',#{value},'%')
            </if>
        </foreach>
        ) AS count_table

    </select>

    <select id="queryTicketById" resultType="Ticket" parameterType="int">
        select * from ticket where id = #{id};
    </select>
    <select id="tableIsTrue" resultType="String" parameterType="String">
        SHOW TABLES LIKE #{table}
    </select>
    <select id="queryRemainingTicket" parameterType="String" resultType="String">
        select remaining_tickets from route_remaining_ticket where route_number = #{route_number} and route_date = #{route_date}
    </select>

    <select id="queryRemainingTicketAndRouteNumber" parameterType="String" resultMap="remainingTicketAndRouteNumber">
        SELECT route_remaining_ticket.remaining_tickets,orderinfo.route_number
        FROM route_remaining_ticket
                 JOIN orderinfo ON orderinfo.route_number = route_remaining_ticket.route_number
        WHERE orderinfo.order_number = #{order_number} AND route_remaining_ticket.route_date = #{route_date}
    </select>
    <resultMap id="remainingTicketAndRouteNumber" type="HashMap">
        <result column="remaining_tickets" property="remaining_tickets" javaType="int" />
        <result column="route_number" property="route_number" javaType="String" />
    </resultMap>
    <select id="queryPassengerCapacityByRouteNumber" parameterType="String" resultType="int">
        SELECT passenger_capacity FROM car,car_route
            WHERE car.`car_number` = car_route.`car_number` AND route_number = #{route_number}
    </select>
    <select id="querySeat" parameterType="String" resultType="int">
        select seat_id
        from ${ticket} where route_number=#{route_number} ORDER BY seat_id;
    </select>
    <select id="queryTableName" parameterType="String" resultType="String">
        SELECT table_name FROM information_schema.tables
        WHERE table_name LIKE 'ticket_%'
          AND table_schema = 'ticketingsystem' AND table_name >= #{table};
    </select>
    <select id="queryAllTableName" parameterType="String" resultType="String">
        SELECT table_name FROM information_schema.tables
        WHERE table_name LIKE 'ticket_%'
          AND table_schema = 'ticketingsystem'
    </select>
    <select id="queryAllTicket" resultType="Ticket">
        <foreach item="tableName" collection="tableNames" separator="UNION ALL">
            SELECT * FROM ${tableName}
        </foreach>
        ORDER BY departure_time
    </select>
    <select id="queryTicketByIdNumber" resultType="Ticket">
        <foreach item="tableName" collection="tableNames" separator="UNION ALL">
            <if test="start != null and tableName >= 'ticket_'+start and tableName lte 'ticket_'+end">
                SELECT * FROM ${tableName} where id_number = #{idNumber}
            </if>
        </foreach>
        ORDER BY departure_time
    </select>
    <select id="queryTicketCountByIdNumber" resultType="int">
        SELECT count(*) from (
        <foreach item="tableName" collection="tableNames" separator="UNION ALL">
            SELECT * FROM ${tableName} where id_number = #{idNumber}
            <if test="start != null">
                AND BETWEEN #{start} AND #{end}
            </if>
        </foreach>
        ) as count
    </select>
    <insert id="insertRemainingTicketInfo" parameterType="String">
        insert into route_remaining_ticket (route_number, remaining_tickets, route_date)
            values (#{route_number},#{remaining_tickets},#{route_date})
    </insert>

    <insert id="addTicket">
        insert into ${table} (id, order_number,route_number, username, id_number,departure_time, from_station, to_station, seat_type, seat_id, price, ticket_issuance_time)
        values (#{ticket.id}, #{ticket.order_number}, #{ticket.route_number}, #{ticket.username}, #{ticket.id_number},#{ticket.departure_time}, #{ticket.from_station}, #{ticket.to_station}, #{ticket.seat_type}, #{ticket.seat_id}, #{ticket.price}, #{ticket.ticket_issuance_time})
    </insert>

    <update id="createTableIsNotExist" parameterType="String">
        CREATE TABLE IF NOT EXISTS `${table}` (
            `id` INT NOT NULL AUTO_INCREMENT,
            `order_number` VARCHAR(20) DEFAULT NULL,
            `route_number` VARCHAR(20) DEFAULT NULL,
            `username` VARCHAR(20) DEFAULT NULL,
            `id_number` VARCHAR(20) DEFAULT NULL,
            `departure_time` DATETIME DEFAULT NULL,
            `from_station` VARCHAR(20) DEFAULT NULL,
            `to_station` VARCHAR(20) DEFAULT NULL,
            `seat_type` VARCHAR(20) DEFAULT NULL,
            `seat_id` INT DEFAULT NULL,
            `price` DECIMAL(7,4) DEFAULT NULL,
            `ticket_issuance_time` DATETIME DEFAULT NULL,
            PRIMARY KEY (`id`)
        ) ENGINE=INNODB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
    </update>
    <update id="updateRemainingTicket" parameterType="String">
        update route_remaining_ticket set remaining_tickets=#{remaining_tickets} where route_number = #{route_number} and route_date = #{route_date}
    </update>

    <update id="updateTicket">
        update ${table}
        <set>
            <if test="ticket.id!=null">id=#{ticket.id},</if>
            <if test="ticket.order_number!=null">order_number=#{ticket.order_number},</if>
            <if test="ticket.route_number!=null">route_number=#{ticket.route_number},</if>
            <if test="ticket.username!=null">username=#{ticket.username},</if>
            <if test="ticket.id_number!=null">id_number=#{ticket.id_number},</if>
            <if test="ticket.departure_time!=null">departure_time=#{ticket.departure_time},</if>
            <if test="ticket.from_station!=null">from_station=#{ticket.from_station},</if>
            <if test="ticket.to_station!=null">to_station=#{ticket.to_station},</if>
            <if test="ticket.seat_type!=null">seat_type=#{ticket.seat_type},</if>
            <if test="ticket.seat_id!=null">seat_id=#{ticket.seat_id},</if>
            <if test="ticket.price!=null">price=#{ticket.price},</if>
            <if test="ticket.ticket_issuance_time!=null">ticket_issuance_time=#{ticket.ticket_issuance_time},</if>
        </set>
        where order_number = #{ticket.order_number}
    </update>

    <delete id="deleteTicketByOrderNumber" parameterType="String">
        delete from ${table} where order_number=#{order_number}
    </delete>

</mapper>
